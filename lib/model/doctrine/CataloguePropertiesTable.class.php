<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CataloguePropertiesTable extends Doctrine_Table
{
  public function findForTable($table_name, $record_id)
  {
     $q = Doctrine_Query::create()
	 ->from('CatalogueProperties p')
	 ->leftJoin('p.PropertiesValues v')
	 ->andWhere('p.referenced_relation = ?',$table_name)
         ->andWhere('p.record_id = ?',$record_id);
    return $q->execute();
  }

  public function getDistinctType()
  {
    $results = Doctrine_Query::create()->
      select('DISTINCT(property_type) as type')->
      from('CatalogueProperties')->
      execute();
    return $results;
  }

  public function getDistinctSubType($type=null)
  {
    $q = Doctrine_Query::create()->
      select('DISTINCT(property_sub_type) as sub_type')->
      from('CatalogueProperties INDEXBY sub_type');

    if(! is_null($type))
      $q->addWhere('property_type = ?',$type);
    $results = $q->fetchArray();
    return array_merge(array(''=>''), array_combine(array_keys($results),array_keys($results)));
  }

  public function getDistinctQualifier($sub_type=null)
  {
    $q = Doctrine_Query::create()->
      select('DISTINCT(property_qualifier) as qualifier')->
      from('CatalogueProperties');

    if(! is_null($sub_type))
      $q->addWhere('property_sub_type = ?',$sub_type);
    $results = $q->fetchArray();
    $rez=array(''=>''); //@TODO: don't know why but doctrine doesnt like it otherwise
    foreach($results as $item)
      $rez[$item['qualifier']]=$item['qualifier'];
    return $rez;
  }
  
  public function getDistinctUnit($type=null)
  {
    $q = Doctrine_Query::create()->
      select('DISTINCT(property_unit) as unit')->
      from('CatalogueProperties INDEXBY unit');

    if(! is_null($type))
      $q->addWhere('property_type = ?',$type);
    $results = $q->fetchArray();
    return array_merge(array(''=>''), array_combine(array_keys($results),array_keys($results)));
  }
}