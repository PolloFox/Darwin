<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Gtu extends BaseGtu
{
  public function getGtuFromDateMasked ()
  {
    $dateTime = new FuzzyDateTime($this->_get('gtu_from_date'), $this->_get('gtu_from_date_mask'));
    return $dateTime->getDateMasked();
  }
  
  public function getGtuToDateMasked ()
  {
    $dateTime = new FuzzyDateTime($this->_get('gtu_to_date'), $this->_get('gtu_to_date_mask'));
    return $dateTime->getDateMasked();
  }
  
  public function getGtuFromDate()
  {
    $from_date = new FuzzyDateTime($this->_get('gtu_from_date'), $this->_get('gtu_from_date_mask'));
    return $from_date->getDateTimeMaskedAsArray();
  }

  public function getGtuToDate()
  {
    $to_date = new FuzzyDateTime($this->_get('gtu_to_date'), $this->_get('gtu_to_date_mask'), false);
    return $to_date->getDateTimeMaskedAsArray();
  }

  public function setGtuFromDate($fd)
  {
    if ($fd instanceof FuzzyDateTime)
    {
      $this->_set('gtu_from_date', $fd->format('Y/m/d'));
      $this->_set('gtu_from_date_mask', $fd->getMask());
    }
    else
    {
      $dateTime = new FuzzyDateTime($fd, 56, true); 
      $this->_set('gtu_from_date', $dateTime->format('Y/m/d'));
      $this->_set('gtu_from_date_mask', $dateTime->getMask());
    }
  }

  public function setGtuToDate($fd)
  {
    if ($fd instanceof FuzzyDateTime)
    {
      $this->_set('gtu_to_date', $fd->format('Y/m/d'));
      $this->_set('gtu_to_date_mask', $fd->getMask());
    }
    else
    {
      $dateTime = new FuzzyDateTime($fd, 56, false); 
      $this->_set('gtu_to_date', $dateTime->format('Y/m/d'));
      $this->_set('gtu_to_date_mask', $dateTime->getMask());
    }
  }

  public function getName()
  {
    if($this->_get('id')==0) return '-';
    $nbr = count($this->TagGroups);
    if(! $nbr) return "No Tags";
    $str = '<ul  class="search_tags">';
    foreach($this->TagGroups as $group)
    {
      $str .= '<li><label>'.$group->getSubGroupName().'<span class="gtu_group"> - '.TagGroups::getGroup($group->getGroupName()).'</span></label><ul class="name_tags">';
      foreach($group->Tags as $value)
        $str .=  '<li>' . $value->getTag().'</li>';
      $str .= '</ul><div class="clear" />';
    }
    $str .= '</ul>';
    return $str;
  }

  public function getTagsWithCode()
  {
    return '<b>'.$this->getCode().'</b>'.$this->getName();
  }

  public function getCode()
  {
    if(! $this->isNew() && $this->_get('id')==0)
      return '-';
    return $this->_get('code');
  }
}