<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class MyPreferencesTable extends Doctrine_Table
{
  public function getBoardWidgets()
  {
    $q = Doctrine_Query::create()
            ->from('MyPreferences p')
	    ->andWhere('p.user_ref = ?', sfContext::getInstance()->getUser()->getAttribute('db_user')->getId())
	    ->andWhere('p.category = ?', 'board_widget')
	    ->orderBy('p.col_num ASC, p.order_by ASC');
    return $q->execute();
  }
  
  public function changeWidgetStatus($category,$widget,$status)
  {
    $q = Doctrine_Query::create()
	->update('MyPreferences p');
	if($status == "open" || $status == "close")
    {
        $q->set('p.opened', $status=="open" ? 'true' : 'false' );
    }
    elseif($status == "visible")
    {
        $q->set('p.visible', 'true');
        $q->set('p.opened', 'true');
        $q->set('p.col_num', 1);
    }
    elseif($status == "hidden")
    {
        $q->set('p.visible', 'false');
    }
    
	$q->andWhere('p.user_ref = ?', sfContext::getInstance()->getUser()->getAttribute('db_user')->getId())
	->andWhere('p.category = ?', $category)
	->andWhere('p.group_name = ?',$widget);
    return $q->execute();
  }
  
  public function changeOrder($col1, $col2)
  {
    $q = Doctrine_Query::create()
	->update('MyPreferences p')
	->set('p.col_num','?',1)
	->set('p.order_by',"( select fct_array_find(?,group_name) ) ",implode(",",$col1))
	->andWhere('p.user_ref = ?', sfContext::getInstance()->getUser()->getAttribute('db_user')->getId())
	->andWhere('p.category = ?', "board_widget") //@TODO: could be change later
	->andWhereIn('p.group_name',$col1)
	->execute();

    $q = Doctrine_Query::create()
	->update('MyPreferences p')
	->set('p.col_num','?',2)
	->set('p.order_by',"( select fct_array_find(?,group_name) ) ",implode(",",$col2))
	->andWhere('p.user_ref = ?', sfContext::getInstance()->getUser()->getAttribute('db_user')->getId())
	->andWhere('p.category = ?', "board_widget") //@TODO: could be change later
	->andWhereIn('p.group_name',$col2)
	->execute();
  }
}