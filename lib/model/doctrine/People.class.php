<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class People extends BasePeople
{
  public static function getTypes()
  {
    return array(
      1 => 'Contact',
      2 => 'Author',
      4 => 'Identifier',
      8 => 'Expert',
      16 => 'Collector',
      32 => 'Preparator',
      64 => 'Photographer'
    );
  }

  public function __toString()
  {
        return $this->getFormatedName();
  }

  public function getDbPeopleType()
  {
    $result = array();
    foreach(self::getTypes() as $k => $value)
    {
      if($k & $this->_get('db_people_type'))
      {
	$result[] = $k;
      }
    }
    return $result;
  }

  public function setDbPeopleType($db_types)
  {
    $result = 0;
    $types = self::getTypes();
    foreach($db_types as $value)
    {
      if(isset($types[$value]))
	$result += $value;
    }
    $this->_set('db_people_type',$result);
  }

  public function setBirthDate($fd)
  {
     if(is_string($fd))
     {
	$this->_set('birth_date',$fd);
     }
     else
     {
      $this->_set('birth_date', $fd->format('Y/m/d') );
      $this->_set('birth_date_mask', $fd->getMask() );
     }
     return $this;
  }


  public function setEndDate($fd)
  {
     if(is_string($fd))
     {
	$this->_set('end_date',$fd);
     }
     else
     {
      $this->_set('end_date', $fd->format('Y/m/d') );
      $this->_set('end_date_mask', $fd->getMask() );
     }
     return $this;
  }

  public function getEndDateObject()
  {
    $date = new FuzzyDateTime($this->_get('end_date'),$this->_get('end_date_mask'),true);
    return $date;
  }

  public function getBirthDateObject()
  {
    $date = new FuzzyDateTime($this->_get('birth_date'),$this->_get('birth_date_mask'),true);
    return $date;
  }
 
  public function getBirthDateMasked($tag='em')
  {
    return $this->getBirthDateObject()->getDateMasked($tag);
  }
 
  public function getEndDateMasked($tag='em')
  {
    return $this->getEndDateObject()->getDateMasked($tag);
  }

  public function getBirthDate()
  {
    return $this->getBirthDateObject()->getDateTimeMaskedAsArray();
  }

  public function getEndDate()
  {
    return $this->getEndDateObject()->getDateTimeMaskedAsArray();
  }


  public function setActivityDateFrom($fd)
  {
     if(is_string($fd))
     {
	$this->_set('activity_date_from',$fd);
     }
     else
     {
      $this->_set('activity_date_from', $fd->format('Y/m/d') );
      $this->_set('activity_date_from_mask', $fd->getMask() );
     }
  }


  public function setActivityDateTo($fd)
  {
     if(is_string($fd))
     {
	$this->_set('activity_date_to',$fd);
     }
     else
     {
      $this->_set('activity_date_to', $fd->format('Y/m/d') );
      $this->_set('activity_date_to_mask', $fd->getMask() );
     }
  }
 
  public function getActivityDateToObject()
  {
    $date = new FuzzyDateTime($this->_get('activity_date_to'),$this->_get('activity_date_to_mask'),true);
    return $date;
  }

  public function getActivityDateFromObject()
  {
    $date = new FuzzyDateTime($this->_get('activity_date_from'),$this->_get('activity_date_from_mask'),true);
    return $date;
  }

  public function getActivityDateFromMasked($tag='em')
  {
    return $this->getActivityDateFromObject()->getDateMasked($tag);
  }
  
  public function getActivityDateToMasked($tag='em')
  {
    return $this->getActivityDateToObject()->getDateMasked($tag);
  }

  public function getActivityDateFrom()
  {
    return $this->getActivityDateFromObject()->getDateTimeMaskedAsArray();
  }

  public function getActivityDateTo()
  {
    return $this->getActivityDateToObject()->getDateTimeMaskedAsArray();
  }
}