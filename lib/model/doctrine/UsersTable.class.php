<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UsersTable extends DarwinTable
{
    /**
    * Get an user with his username and password in internal system
    * @param string $username The username
    * @param string $password The password of the user
    * @return a record with the user or null if it's not found
    */
    public function getUserByPassword($username, $password)
    {
        $q = Doctrine_Query::create()
            ->from('Users u')
            ->leftJoin('u.UsersLoginInfos ul')
            ->andWhere('ul.user_name = ?',$username)
            ->andWhere('ul.password = ?',sha1(sfConfig::get('app_salt').$password))
            ->andWhere('ul.login_system is null');
        return $q->fetchOne();
    }
    public function findUser($id)
    {
	   $q = Doctrine_Query::create()
		->from('users u')
		->where('u.id = ?', $id);

	   return $q->fetchOne(); 
    }
    
    public function getDistinctTitle()
    {
        return $this->createDistinct('Users', 'title', 'title')->execute();
    }	
  /*  public function getTypes($user_type)
    {
     $db_user_type = array(
      1 => 'Registered user',
      2 => 'Encoder',
      4 => 'Collection manager',
      8 => 'Administrator'
      );
	 for($i=8;$i<$user_type;$i*2) array_pop($db_user_type) ;
	 return $db_user_type ;
    }     */
    public function getTypesLevel(array $parameters, $q = null)
    {
      if (is_null($q))
      {
        $q = Doctrine_Query::create()
   	   ->from('users u');
      }
      if (isset($parameters['db_user_type']))
      {
        $q->addWhere('u.db_user_type < ?', 2/*$parameters['db_user_type']*/);
      }
      return $q->execute();
    }
    
    public function getDistinctSubType()
    {
        return $this->createDistinct('Users', 'sub_type', 'sub_type')->execute();
    }	
}
