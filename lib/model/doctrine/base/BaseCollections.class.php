<?php

/**
 * BaseCollections
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $collection_type
 * @property string $code
 * @property string $name
 * @property integer $institution_ref
 * @property integer $main_manager_ref
 * @property integer $parent_ref
 * @property string $path
 * @property boolean $code_auto_increment
 * @property boolean $code_part_code_auto_copy
 * @property People $Institution
 * @property Users $Manager
 * @property Collections $Parent
 * @property Doctrine_Collection $Collections
 * @property Doctrine_Collection $CollectionsAdmin
 * @property Doctrine_Collection $CollectionsRights
 * @property Doctrine_Collection $CollectionsFieldsVisibilities
 * @property Doctrine_Collection $UsersCollRightsAsked
 * @property Doctrine_Collection $PeopleAliases
 * @property Doctrine_Collection $Specimens
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseCollections extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('collections');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('collection_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'mix',
             ));
        $this->hasColumn('code', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('institution_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('main_manager_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('parent_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '/',
             ));
        $this->hasColumn('code_auto_increment', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('code_part_code_auto_copy', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        $this->hasOne('People as Institution', array(
             'local' => 'institution_ref',
             'foreign' => 'id'));

        $this->hasOne('Users as Manager', array(
             'local' => 'main_manager_ref',
             'foreign' => 'id'));

        $this->hasOne('Collections as Parent', array(
             'local' => 'parent_ref',
             'foreign' => 'id'));

        $this->hasMany('Collections', array(
             'local' => 'id',
             'foreign' => 'parent_ref'));

        $this->hasMany('CollectionsAdmin', array(
             'local' => 'id',
             'foreign' => 'collection_ref'));

        $this->hasMany('CollectionsRights', array(
             'local' => 'id',
             'foreign' => 'collection_ref'));

        $this->hasMany('CollectionsFieldsVisibilities', array(
             'local' => 'id',
             'foreign' => 'collection_ref'));

        $this->hasMany('UsersCollRightsAsked', array(
             'local' => 'id',
             'foreign' => 'collection_ref'));

        $this->hasMany('PeopleAliases', array(
             'local' => 'id',
             'foreign' => 'collection_ref'));

        $this->hasMany('Specimens', array(
             'local' => 'id',
             'foreign' => 'collection_ref'));
    }
}