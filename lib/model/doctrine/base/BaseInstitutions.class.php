<?php

/**
 * BaseInstitutions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $is_physical
 * @property string $sub_type
 * @property string $formated_name
 * @property string $formated_name_indexed
 * @property string $formated_name_ts
 * @property string $family_name
 * @property string $additional_names
 * @property integer $db_people_type
 * @property Doctrine_Collection $PeopleRelationships
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method boolean             getIsPhysical()            Returns the current record's "is_physical" value
 * @method string              getSubType()               Returns the current record's "sub_type" value
 * @method string              getFormatedName()          Returns the current record's "formated_name" value
 * @method string              getFormatedNameIndexed()   Returns the current record's "formated_name_indexed" value
 * @method string              getFormatedNameTs()        Returns the current record's "formated_name_ts" value
 * @method string              getFamilyName()            Returns the current record's "family_name" value
 * @method string              getAdditionalNames()       Returns the current record's "additional_names" value
 * @method integer             getDbPeopleType()          Returns the current record's "db_people_type" value
 * @method Doctrine_Collection getPeopleRelationships()   Returns the current record's "PeopleRelationships" collection
 * @method Institutions        setId()                    Sets the current record's "id" value
 * @method Institutions        setIsPhysical()            Sets the current record's "is_physical" value
 * @method Institutions        setSubType()               Sets the current record's "sub_type" value
 * @method Institutions        setFormatedName()          Sets the current record's "formated_name" value
 * @method Institutions        setFormatedNameIndexed()   Sets the current record's "formated_name_indexed" value
 * @method Institutions        setFormatedNameTs()        Sets the current record's "formated_name_ts" value
 * @method Institutions        setFamilyName()            Sets the current record's "family_name" value
 * @method Institutions        setAdditionalNames()       Sets the current record's "additional_names" value
 * @method Institutions        setDbPeopleType()          Sets the current record's "db_people_type" value
 * @method Institutions        setPeopleRelationships()   Sets the current record's "PeopleRelationships" collection
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseInstitutions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('people');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('is_physical', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sub_type', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('formated_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('formated_name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('formated_name_ts', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('family_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('additional_names', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('db_people_type', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PeopleRelationships', array(
             'local' => 'id',
             'foreign' => 'person_1_ref'));
    }
}