<?php

/**
 * BaseLithology
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_indexed
 * @property integer $description_year
 * @property string $description_year_compl
 * @property integer $level_ref
 * @property string $status
 * @property string $path
 * @property integer $parent_ref
 * @property integer $unit_main_group_ref
 * @property string $unit_main_group_indexed
 * @property integer $unit_group_ref
 * @property string $unit_group_indexed
 * @property integer $unit_sub_group_ref
 * @property string $unit_sub_group_indexed
 * @property integer $unit_rock_ref
 * @property string $unit_rock_indexed
 * @property Lithology $Parent
 * @property Doctrine_Collection $Lithology
 * @property Doctrine_Collection $Specimens
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseLithology extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lithology');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('description_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description_year_compl', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));
        $this->hasColumn('level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'valid',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '/',
             ));
        $this->hasColumn('parent_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_main_group_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_main_group_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_group_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_group_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_sub_group_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_sub_group_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_rock_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_rock_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
    }

    public function setUp()
    {
        $this->hasOne('Lithology as Parent', array(
             'local' => 'parent_ref',
             'foreign' => 'id'));

        $this->hasMany('Lithology', array(
             'local' => 'id',
             'foreign' => 'parent_ref'));

        $this->hasMany('Specimens', array(
             'local' => 'id',
             'foreign' => 'lithology_ref'));
    }
}