<?php

/**
 * BaseLithostratigraphy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_indexed
 * @property integer $level_ref
 * @property string $status
 * @property string $path
 * @property integer $parent_ref
 * @property integer $group_ref
 * @property string $group_indexed
 * @property integer $formation_ref
 * @property string $formation_indexed
 * @property integer $member_ref
 * @property string $member_indexed
 * @property integer $layer_ref
 * @property string $layer_indexed
 * @property integer $sub_level_1_ref
 * @property string $sub_level_1_indexed
 * @property integer $sub_level_2_ref
 * @property string $sub_level_2_indexed
 * @property Lithostratigraphy $Parent
 * @property Doctrine_Collection $Lithostratigraphy
 * @property Doctrine_Collection $Specimens
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getName()                Returns the current record's "name" value
 * @method string              getNameIndexed()         Returns the current record's "name_indexed" value
 * @method integer             getLevelRef()            Returns the current record's "level_ref" value
 * @method string              getStatus()              Returns the current record's "status" value
 * @method string              getPath()                Returns the current record's "path" value
 * @method integer             getParentRef()           Returns the current record's "parent_ref" value
 * @method integer             getGroupRef()            Returns the current record's "group_ref" value
 * @method string              getGroupIndexed()        Returns the current record's "group_indexed" value
 * @method integer             getFormationRef()        Returns the current record's "formation_ref" value
 * @method string              getFormationIndexed()    Returns the current record's "formation_indexed" value
 * @method integer             getMemberRef()           Returns the current record's "member_ref" value
 * @method string              getMemberIndexed()       Returns the current record's "member_indexed" value
 * @method integer             getLayerRef()            Returns the current record's "layer_ref" value
 * @method string              getLayerIndexed()        Returns the current record's "layer_indexed" value
 * @method integer             getSubLevel1Ref()        Returns the current record's "sub_level_1_ref" value
 * @method string              getSubLevel1Indexed()    Returns the current record's "sub_level_1_indexed" value
 * @method integer             getSubLevel2Ref()        Returns the current record's "sub_level_2_ref" value
 * @method string              getSubLevel2Indexed()    Returns the current record's "sub_level_2_indexed" value
 * @method Lithostratigraphy   getParent()              Returns the current record's "Parent" value
 * @method Doctrine_Collection getLithostratigraphy()   Returns the current record's "Lithostratigraphy" collection
 * @method Doctrine_Collection getSpecimens()           Returns the current record's "Specimens" collection
 * @method Lithostratigraphy   setId()                  Sets the current record's "id" value
 * @method Lithostratigraphy   setName()                Sets the current record's "name" value
 * @method Lithostratigraphy   setNameIndexed()         Sets the current record's "name_indexed" value
 * @method Lithostratigraphy   setLevelRef()            Sets the current record's "level_ref" value
 * @method Lithostratigraphy   setStatus()              Sets the current record's "status" value
 * @method Lithostratigraphy   setPath()                Sets the current record's "path" value
 * @method Lithostratigraphy   setParentRef()           Sets the current record's "parent_ref" value
 * @method Lithostratigraphy   setGroupRef()            Sets the current record's "group_ref" value
 * @method Lithostratigraphy   setGroupIndexed()        Sets the current record's "group_indexed" value
 * @method Lithostratigraphy   setFormationRef()        Sets the current record's "formation_ref" value
 * @method Lithostratigraphy   setFormationIndexed()    Sets the current record's "formation_indexed" value
 * @method Lithostratigraphy   setMemberRef()           Sets the current record's "member_ref" value
 * @method Lithostratigraphy   setMemberIndexed()       Sets the current record's "member_indexed" value
 * @method Lithostratigraphy   setLayerRef()            Sets the current record's "layer_ref" value
 * @method Lithostratigraphy   setLayerIndexed()        Sets the current record's "layer_indexed" value
 * @method Lithostratigraphy   setSubLevel1Ref()        Sets the current record's "sub_level_1_ref" value
 * @method Lithostratigraphy   setSubLevel1Indexed()    Sets the current record's "sub_level_1_indexed" value
 * @method Lithostratigraphy   setSubLevel2Ref()        Sets the current record's "sub_level_2_ref" value
 * @method Lithostratigraphy   setSubLevel2Indexed()    Sets the current record's "sub_level_2_indexed" value
 * @method Lithostratigraphy   setParent()              Sets the current record's "Parent" value
 * @method Lithostratigraphy   setLithostratigraphy()   Sets the current record's "Lithostratigraphy" collection
 * @method Lithostratigraphy   setSpecimens()           Sets the current record's "Specimens" collection
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseLithostratigraphy extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lithostratigraphy');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('level_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'valid',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '/',
             ));
        $this->hasColumn('parent_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('group_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('group_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('formation_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('formation_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('member_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('member_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('layer_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('layer_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('sub_level_1_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('sub_level_1_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('sub_level_2_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('sub_level_2_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Lithostratigraphy as Parent', array(
             'local' => 'parent_ref',
             'foreign' => 'id'));

        $this->hasMany('Lithostratigraphy', array(
             'local' => 'id',
             'foreign' => 'parent_ref'));

        $this->hasMany('Specimens', array(
             'local' => 'id',
             'foreign' => 'litho_ref'));
    }
}