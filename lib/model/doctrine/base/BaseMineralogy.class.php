<?php

/**
 * BaseMineralogy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_indexed
 * @property integer $description_year
 * @property string $description_year_compl
 * @property integer $level_ref
 * @property string $status
 * @property string $path
 * @property integer $parent_ref
 * @property string $code
 * @property string $classification
 * @property string $formule
 * @property string $formule_indexed
 * @property string $cristal_system
 * @property integer $unit_class_ref
 * @property string $unit_class_indexed
 * @property integer $unit_division_ref
 * @property string $unit_division_indexed
 * @property integer $unit_family_ref
 * @property string $unit_family_indexed
 * @property integer $unit_group_ref
 * @property string $unit_group_indexed
 * @property integer $unit_variety_ref
 * @property string $unit_variety_indexed
 * @property Mineralogy $Parent
 * @property Doctrine_Collection $Mineralogy
 * @property Doctrine_Collection $Specimens
 * @property Doctrine_Collection $SpecimensAccompanying
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseMineralogy extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mineralogy');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('description_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description_year_compl', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));
        $this->hasColumn('level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'valid',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '/',
             ));
        $this->hasColumn('parent_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('code', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('classification', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'strunz',
             ));
        $this->hasColumn('formule', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('formule_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('cristal_system', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('unit_class_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_class_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_division_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_division_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_family_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_family_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_group_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_group_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('unit_variety_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('unit_variety_indexed', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
    }

    public function setUp()
    {
        $this->hasOne('Mineralogy as Parent', array(
             'local' => 'parent_ref',
             'foreign' => 'id'));

        $this->hasMany('Mineralogy', array(
             'local' => 'id',
             'foreign' => 'parent_ref'));

        $this->hasMany('Specimens', array(
             'local' => 'id',
             'foreign' => 'mineral_ref'));

        $this->hasMany('SpecimensAccompanying', array(
             'local' => 'id',
             'foreign' => 'mineral_ref'));
    }
}