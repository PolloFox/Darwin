<?php

/**
 * BasePeopleRelationships
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $relationship_type
 * @property integer $person_1_ref
 * @property integer $person_2_ref
 * @property string $person_title
 * @property string $path
 * @property string $organization_unit
 * @property string $person_user_role
 * @property string $activity_period
 * @property People $People1
 * @property People $People2
 * 
 * @method string              getRelationshipType()  Returns the current record's "relationship_type" value
 * @method integer             getPerson1Ref()        Returns the current record's "person_1_ref" value
 * @method integer             getPerson2Ref()        Returns the current record's "person_2_ref" value
 * @method string              getPersonTitle()       Returns the current record's "person_title" value
 * @method string              getPath()              Returns the current record's "path" value
 * @method string              getOrganizationUnit()  Returns the current record's "organization_unit" value
 * @method string              getPersonUserRole()    Returns the current record's "person_user_role" value
 * @method string              getActivityPeriod()    Returns the current record's "activity_period" value
 * @method People              getPeople1()           Returns the current record's "People1" value
 * @method People              getPeople2()           Returns the current record's "People2" value
 * @method PeopleRelationships setRelationshipType()  Sets the current record's "relationship_type" value
 * @method PeopleRelationships setPerson1Ref()        Sets the current record's "person_1_ref" value
 * @method PeopleRelationships setPerson2Ref()        Sets the current record's "person_2_ref" value
 * @method PeopleRelationships setPersonTitle()       Sets the current record's "person_title" value
 * @method PeopleRelationships setPath()              Sets the current record's "path" value
 * @method PeopleRelationships setOrganizationUnit()  Sets the current record's "organization_unit" value
 * @method PeopleRelationships setPersonUserRole()    Sets the current record's "person_user_role" value
 * @method PeopleRelationships setActivityPeriod()    Sets the current record's "activity_period" value
 * @method PeopleRelationships setPeople1()           Sets the current record's "People1" value
 * @method PeopleRelationships setPeople2()           Sets the current record's "People2" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePeopleRelationships extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('people_relationships');
        $this->hasColumn('relationship_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'belongs to',
             ));
        $this->hasColumn('person_1_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('person_2_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('person_title', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('organization_unit', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('person_user_role', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('activity_period', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('People as People1', array(
             'local' => 'person_1_ref',
             'foreign' => 'id'));

        $this->hasOne('People as People2', array(
             'local' => 'person_2_ref',
             'foreign' => 'id'));
    }
}