<?php

/**
 * BaseSpecimenParts
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $specimen_individual_ref
 * @property string $specimen_part
 * @property boolean $complete
 * @property string $building
 * @property string $floor
 * @property string $room
 * @property string $row
 * @property string $shelf
 * @property string $container
 * @property string $sub_container
 * @property string $container_type
 * @property string $sub_container_type
 * @property string $storage
 * @property boolean $surnumerary
 * @property string $specimen_status
 * @property integer $specimen_part_count_min
 * @property integer $specimen_part_count_max
 * @property SpecimenIndividuals $SpecimenIndividuals
 * @property Doctrine_Collection $SpecimenPartsInsurances
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5845 2009-06-09 07:36:57Z jwage $
 */
abstract class BaseSpecimenParts extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('specimen_parts');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('specimen_individual_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specimen_part', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'specimen',
             ));
        $this->hasColumn('complete', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('building', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('floor', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('room', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('row', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('shelf', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('sub_container', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'container',
             ));
        $this->hasColumn('sub_container_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'container',
             ));
        $this->hasColumn('storage', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'dry',
             ));
        $this->hasColumn('surnumerary', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('specimen_status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'good state',
             ));
        $this->hasColumn('specimen_part_count_min', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '1',
             ));
        $this->hasColumn('specimen_part_count_max', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '1',
             ));
    }

    public function setUp()
    {
        $this->hasOne('SpecimenIndividuals', array(
             'local' => 'specimen_individual_ref',
             'foreign' => 'id'));

        $this->hasMany('SpecimenPartsInsurances', array(
             'local' => 'id',
             'foreign' => 'specimen_part_ref'));
    }
}