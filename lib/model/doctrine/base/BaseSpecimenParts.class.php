<?php

/**
 * BaseSpecimenParts
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $specimen_individual_ref
 * @property string $specimen_part
 * @property boolean $complete
 * @property string $building
 * @property string $floor
 * @property string $room
 * @property string $row
 * @property string $shelf
 * @property string $container
 * @property string $sub_container
 * @property string $container_type
 * @property string $sub_container_type
 * @property string $storage
 * @property boolean $surnumerary
 * @property string $specimen_status
 * @property integer $specimen_part_count_min
 * @property integer $specimen_part_count_max
 * @property string $category
 * @property SpecimenIndividuals $SpecimenIndividuals
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getSpecimenIndividualRef()   Returns the current record's "specimen_individual_ref" value
 * @method string              getSpecimenPart()            Returns the current record's "specimen_part" value
 * @method boolean             getComplete()                Returns the current record's "complete" value
 * @method string              getBuilding()                Returns the current record's "building" value
 * @method string              getFloor()                   Returns the current record's "floor" value
 * @method string              getRoom()                    Returns the current record's "room" value
 * @method string              getRow()                     Returns the current record's "row" value
 * @method string              getShelf()                   Returns the current record's "shelf" value
 * @method string              getContainer()               Returns the current record's "container" value
 * @method string              getSubContainer()            Returns the current record's "sub_container" value
 * @method string              getContainerType()           Returns the current record's "container_type" value
 * @method string              getSubContainerType()        Returns the current record's "sub_container_type" value
 * @method string              getStorage()                 Returns the current record's "storage" value
 * @method boolean             getSurnumerary()             Returns the current record's "surnumerary" value
 * @method string              getSpecimenStatus()          Returns the current record's "specimen_status" value
 * @method integer             getSpecimenPartCountMin()    Returns the current record's "specimen_part_count_min" value
 * @method integer             getSpecimenPartCountMax()    Returns the current record's "specimen_part_count_max" value
 * @method string              getCategory()                Returns the current record's "category" value
 * @method SpecimenIndividuals getSpecimenIndividuals()     Returns the current record's "SpecimenIndividuals" value
 * @method SpecimenParts       setId()                      Sets the current record's "id" value
 * @method SpecimenParts       setSpecimenIndividualRef()   Sets the current record's "specimen_individual_ref" value
 * @method SpecimenParts       setSpecimenPart()            Sets the current record's "specimen_part" value
 * @method SpecimenParts       setComplete()                Sets the current record's "complete" value
 * @method SpecimenParts       setBuilding()                Sets the current record's "building" value
 * @method SpecimenParts       setFloor()                   Sets the current record's "floor" value
 * @method SpecimenParts       setRoom()                    Sets the current record's "room" value
 * @method SpecimenParts       setRow()                     Sets the current record's "row" value
 * @method SpecimenParts       setShelf()                   Sets the current record's "shelf" value
 * @method SpecimenParts       setContainer()               Sets the current record's "container" value
 * @method SpecimenParts       setSubContainer()            Sets the current record's "sub_container" value
 * @method SpecimenParts       setContainerType()           Sets the current record's "container_type" value
 * @method SpecimenParts       setSubContainerType()        Sets the current record's "sub_container_type" value
 * @method SpecimenParts       setStorage()                 Sets the current record's "storage" value
 * @method SpecimenParts       setSurnumerary()             Sets the current record's "surnumerary" value
 * @method SpecimenParts       setSpecimenStatus()          Sets the current record's "specimen_status" value
 * @method SpecimenParts       setSpecimenPartCountMin()    Sets the current record's "specimen_part_count_min" value
 * @method SpecimenParts       setSpecimenPartCountMax()    Sets the current record's "specimen_part_count_max" value
 * @method SpecimenParts       setCategory()                Sets the current record's "category" value
 * @method SpecimenParts       setSpecimenIndividuals()     Sets the current record's "SpecimenIndividuals" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7380 2010-03-15 21:07:50Z jwage $
 */
abstract class BaseSpecimenParts extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('specimen_parts');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('specimen_individual_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specimen_part', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'specimen',
             ));
        $this->hasColumn('complete', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('building', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('floor', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('room', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('row', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('shelf', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('sub_container', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'container',
             ));
        $this->hasColumn('sub_container_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'container',
             ));
        $this->hasColumn('storage', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'dry',
             ));
        $this->hasColumn('surnumerary', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('specimen_status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'good state',
             ));
        $this->hasColumn('specimen_part_count_min', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('specimen_part_count_max', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('category', 'string', null, array(
             'type' => 'string',
             'default' => 'physical',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SpecimenIndividuals', array(
             'local' => 'specimen_individual_ref',
             'foreign' => 'id'));
    }
}