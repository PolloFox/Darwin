<?php

/**
 * BaseStaging
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $spec_ref
 * @property integer $import_ref
 * @property string $category
 * @property integer default:0 $expedition_ref
 * @property string $expedition_name
 * @property boolean $station_visible
 * @property integer $gtu_ref
 * @property string $gtu_code
 * @property integer $gtu_from_date_mask
 * @property string $gtu_from_date
 * @property integer $gtu_to_date_mask
 * @property string $gtu_to_date
 * @property string $gtu_country_tag_value
 * @property integer $taxon_ref
 * @property string $taxon_name
 * @property integer $taxon_level_ref
 * @property string $taxon_level_name
 * @property string $taxon_status
 * @property boolean $taxon_extinct
 * @property integer $litho_ref
 * @property string $litho_name
 * @property integer $litho_level_ref
 * @property string $litho_level_name
 * @property string $litho_status
 * @property boolean $litho_local
 * @property string $litho_color
 * @property integer $chrono_ref
 * @property string $chrono_name
 * @property integer $chrono_level_ref
 * @property string $chrono_level_name
 * @property string $chrono_status
 * @property boolean $chrono_local
 * @property string $chrono_color
 * @property integer $lithology_ref
 * @property string $lithology_name
 * @property string $lithology_name_indexed
 * @property string $lithology_name_order_by
 * @property integer $lithology_level_ref
 * @property string $lithology_level_name
 * @property string $lithology_status
 * @property boolean $lithology_local
 * @property string $lithology_color
 * @property string $lithology_path
 * @property integer $mineral_ref
 * @property string $mineral_name
 * @property string $mineral_name_indexed
 * @property string $mineral_name_order_by
 * @property integer $mineral_level_ref
 * @property string $mineral_level_name
 * @property string $mineral_status
 * @property boolean $mineral_local
 * @property string $mineral_color
 * @property integer $host_taxon_ref
 * @property string $host_relationship
 * @property string $host_taxon_name
 * @property integer $host_taxon_level_ref
 * @property string $host_taxon_level_name
 * @property string $host_taxon_status
 * @property boolean $host_taxon_extinct
 * @property integer $host_specimen_ref
 * @property integer $ig_ref
 * @property string $ig_num
 * @property integer $ig_date_mask
 * @property string $ig_date
 * @property string $acquisition_category
 * @property integer $acquisition_date_mask
 * @property string $acquisition_date
 * @property integer $individual_ref
 * @property string $individual_type
 * @property string $individual_type_group
 * @property string $individual_type_search
 * @property string $individual_sex
 * @property string $individual_state
 * @property string $individual_stage
 * @property string $individual_social_status
 * @property string $individual_rock_form
 * @property integer $individual_count_min
 * @property integer $individual_count_max
 * @property integer $part_ref
 * @property string $part
 * @property string $part_status
 * @property string $building
 * @property string $floor
 * @property string $room
 * @property string $row
 * @property string $shelf
 * @property string $container_type
 * @property string $container_storage
 * @property string $container
 * @property string $sub_container_type
 * @property string $sub_container_storage
 * @property string $sub_container
 * @property integer $part_count_min
 * @property integer $part_count_max
 * @property string $specimen_status
 * @property boolean $complete
 * @property boolean $surnumerary
 * @property Imports $Import
 * @property Doctrine_Collection $StagingTagGroups
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getSpecRef()                  Returns the current record's "spec_ref" value
 * @method integer             getImportRef()                Returns the current record's "import_ref" value
 * @method string              getCategory()                 Returns the current record's "category" value
 * @method string              getExpeditionName()           Returns the current record's "expedition_name" value
 * @method boolean             getStationVisible()           Returns the current record's "station_visible" value
 * @method integer             getGtuRef()                   Returns the current record's "gtu_ref" value
 * @method string              getGtuCode()                  Returns the current record's "gtu_code" value
 * @method integer             getGtuFromDateMask()          Returns the current record's "gtu_from_date_mask" value
 * @method string              getGtuFromDate()              Returns the current record's "gtu_from_date" value
 * @method integer             getGtuToDateMask()            Returns the current record's "gtu_to_date_mask" value
 * @method string              getGtuToDate()                Returns the current record's "gtu_to_date" value
 * @method string              getGtuCountryTagValue()       Returns the current record's "gtu_country_tag_value" value
 * @method integer             getTaxonRef()                 Returns the current record's "taxon_ref" value
 * @method string              getTaxonName()                Returns the current record's "taxon_name" value
 * @method integer             getTaxonLevelRef()            Returns the current record's "taxon_level_ref" value
 * @method string              getTaxonLevelName()           Returns the current record's "taxon_level_name" value
 * @method string              getTaxonStatus()              Returns the current record's "taxon_status" value
 * @method boolean             getTaxonExtinct()             Returns the current record's "taxon_extinct" value
 * @method integer             getLithoRef()                 Returns the current record's "litho_ref" value
 * @method string              getLithoName()                Returns the current record's "litho_name" value
 * @method integer             getLithoLevelRef()            Returns the current record's "litho_level_ref" value
 * @method string              getLithoLevelName()           Returns the current record's "litho_level_name" value
 * @method string              getLithoStatus()              Returns the current record's "litho_status" value
 * @method boolean             getLithoLocal()               Returns the current record's "litho_local" value
 * @method string              getLithoColor()               Returns the current record's "litho_color" value
 * @method integer             getChronoRef()                Returns the current record's "chrono_ref" value
 * @method string              getChronoName()               Returns the current record's "chrono_name" value
 * @method integer             getChronoLevelRef()           Returns the current record's "chrono_level_ref" value
 * @method string              getChronoLevelName()          Returns the current record's "chrono_level_name" value
 * @method string              getChronoStatus()             Returns the current record's "chrono_status" value
 * @method boolean             getChronoLocal()              Returns the current record's "chrono_local" value
 * @method string              getChronoColor()              Returns the current record's "chrono_color" value
 * @method integer             getLithologyRef()             Returns the current record's "lithology_ref" value
 * @method string              getLithologyName()            Returns the current record's "lithology_name" value
 * @method string              getLithologyNameIndexed()     Returns the current record's "lithology_name_indexed" value
 * @method string              getLithologyNameOrderBy()     Returns the current record's "lithology_name_order_by" value
 * @method integer             getLithologyLevelRef()        Returns the current record's "lithology_level_ref" value
 * @method string              getLithologyLevelName()       Returns the current record's "lithology_level_name" value
 * @method string              getLithologyStatus()          Returns the current record's "lithology_status" value
 * @method boolean             getLithologyLocal()           Returns the current record's "lithology_local" value
 * @method string              getLithologyColor()           Returns the current record's "lithology_color" value
 * @method string              getLithologyPath()            Returns the current record's "lithology_path" value
 * @method integer             getMineralRef()               Returns the current record's "mineral_ref" value
 * @method string              getMineralName()              Returns the current record's "mineral_name" value
 * @method string              getMineralNameIndexed()       Returns the current record's "mineral_name_indexed" value
 * @method string              getMineralNameOrderBy()       Returns the current record's "mineral_name_order_by" value
 * @method integer             getMineralLevelRef()          Returns the current record's "mineral_level_ref" value
 * @method string              getMineralLevelName()         Returns the current record's "mineral_level_name" value
 * @method string              getMineralStatus()            Returns the current record's "mineral_status" value
 * @method boolean             getMineralLocal()             Returns the current record's "mineral_local" value
 * @method string              getMineralColor()             Returns the current record's "mineral_color" value
 * @method integer             getHostTaxonRef()             Returns the current record's "host_taxon_ref" value
 * @method string              getHostRelationship()         Returns the current record's "host_relationship" value
 * @method string              getHostTaxonName()            Returns the current record's "host_taxon_name" value
 * @method integer             getHostTaxonLevelRef()        Returns the current record's "host_taxon_level_ref" value
 * @method string              getHostTaxonLevelName()       Returns the current record's "host_taxon_level_name" value
 * @method string              getHostTaxonStatus()          Returns the current record's "host_taxon_status" value
 * @method boolean             getHostTaxonExtinct()         Returns the current record's "host_taxon_extinct" value
 * @method integer             getHostSpecimenRef()          Returns the current record's "host_specimen_ref" value
 * @method integer             getIgRef()                    Returns the current record's "ig_ref" value
 * @method string              getIgNum()                    Returns the current record's "ig_num" value
 * @method integer             getIgDateMask()               Returns the current record's "ig_date_mask" value
 * @method string              getIgDate()                   Returns the current record's "ig_date" value
 * @method string              getAcquisitionCategory()      Returns the current record's "acquisition_category" value
 * @method integer             getAcquisitionDateMask()      Returns the current record's "acquisition_date_mask" value
 * @method string              getAcquisitionDate()          Returns the current record's "acquisition_date" value
 * @method integer             getIndividualRef()            Returns the current record's "individual_ref" value
 * @method string              getIndividualType()           Returns the current record's "individual_type" value
 * @method string              getIndividualTypeGroup()      Returns the current record's "individual_type_group" value
 * @method string              getIndividualTypeSearch()     Returns the current record's "individual_type_search" value
 * @method string              getIndividualSex()            Returns the current record's "individual_sex" value
 * @method string              getIndividualState()          Returns the current record's "individual_state" value
 * @method string              getIndividualStage()          Returns the current record's "individual_stage" value
 * @method string              getIndividualSocialStatus()   Returns the current record's "individual_social_status" value
 * @method string              getIndividualRockForm()       Returns the current record's "individual_rock_form" value
 * @method integer             getIndividualCountMin()       Returns the current record's "individual_count_min" value
 * @method integer             getIndividualCountMax()       Returns the current record's "individual_count_max" value
 * @method integer             getPartRef()                  Returns the current record's "part_ref" value
 * @method string              getPart()                     Returns the current record's "part" value
 * @method string              getPartStatus()               Returns the current record's "part_status" value
 * @method string              getBuilding()                 Returns the current record's "building" value
 * @method string              getFloor()                    Returns the current record's "floor" value
 * @method string              getRoom()                     Returns the current record's "room" value
 * @method string              getRow()                      Returns the current record's "row" value
 * @method string              getShelf()                    Returns the current record's "shelf" value
 * @method string              getContainerType()            Returns the current record's "container_type" value
 * @method string              getContainerStorage()         Returns the current record's "container_storage" value
 * @method string              getContainer()                Returns the current record's "container" value
 * @method string              getSubContainerType()         Returns the current record's "sub_container_type" value
 * @method string              getSubContainerStorage()      Returns the current record's "sub_container_storage" value
 * @method string              getSubContainer()             Returns the current record's "sub_container" value
 * @method integer             getPartCountMin()             Returns the current record's "part_count_min" value
 * @method integer             getPartCountMax()             Returns the current record's "part_count_max" value
 * @method string              getSpecimenStatus()           Returns the current record's "specimen_status" value
 * @method boolean             getComplete()                 Returns the current record's "complete" value
 * @method boolean             getSurnumerary()              Returns the current record's "surnumerary" value
 * @method Imports             getImport()                   Returns the current record's "Import" value
 * @method Doctrine_Collection getStagingTagGroups()         Returns the current record's "StagingTagGroups" collection
 * @method Staging             setId()                       Sets the current record's "id" value
 * @method Staging             setSpecRef()                  Sets the current record's "spec_ref" value
 * @method Staging             setImportRef()                Sets the current record's "import_ref" value
 * @method Staging             setCategory()                 Sets the current record's "category" value
 * @method Staging             setExpeditionName()           Sets the current record's "expedition_name" value
 * @method Staging             setStationVisible()           Sets the current record's "station_visible" value
 * @method Staging             setGtuRef()                   Sets the current record's "gtu_ref" value
 * @method Staging             setGtuCode()                  Sets the current record's "gtu_code" value
 * @method Staging             setGtuFromDateMask()          Sets the current record's "gtu_from_date_mask" value
 * @method Staging             setGtuFromDate()              Sets the current record's "gtu_from_date" value
 * @method Staging             setGtuToDateMask()            Sets the current record's "gtu_to_date_mask" value
 * @method Staging             setGtuToDate()                Sets the current record's "gtu_to_date" value
 * @method Staging             setGtuCountryTagValue()       Sets the current record's "gtu_country_tag_value" value
 * @method Staging             setTaxonRef()                 Sets the current record's "taxon_ref" value
 * @method Staging             setTaxonName()                Sets the current record's "taxon_name" value
 * @method Staging             setTaxonLevelRef()            Sets the current record's "taxon_level_ref" value
 * @method Staging             setTaxonLevelName()           Sets the current record's "taxon_level_name" value
 * @method Staging             setTaxonStatus()              Sets the current record's "taxon_status" value
 * @method Staging             setTaxonExtinct()             Sets the current record's "taxon_extinct" value
 * @method Staging             setLithoRef()                 Sets the current record's "litho_ref" value
 * @method Staging             setLithoName()                Sets the current record's "litho_name" value
 * @method Staging             setLithoLevelRef()            Sets the current record's "litho_level_ref" value
 * @method Staging             setLithoLevelName()           Sets the current record's "litho_level_name" value
 * @method Staging             setLithoStatus()              Sets the current record's "litho_status" value
 * @method Staging             setLithoLocal()               Sets the current record's "litho_local" value
 * @method Staging             setLithoColor()               Sets the current record's "litho_color" value
 * @method Staging             setChronoRef()                Sets the current record's "chrono_ref" value
 * @method Staging             setChronoName()               Sets the current record's "chrono_name" value
 * @method Staging             setChronoLevelRef()           Sets the current record's "chrono_level_ref" value
 * @method Staging             setChronoLevelName()          Sets the current record's "chrono_level_name" value
 * @method Staging             setChronoStatus()             Sets the current record's "chrono_status" value
 * @method Staging             setChronoLocal()              Sets the current record's "chrono_local" value
 * @method Staging             setChronoColor()              Sets the current record's "chrono_color" value
 * @method Staging             setLithologyRef()             Sets the current record's "lithology_ref" value
 * @method Staging             setLithologyName()            Sets the current record's "lithology_name" value
 * @method Staging             setLithologyNameIndexed()     Sets the current record's "lithology_name_indexed" value
 * @method Staging             setLithologyNameOrderBy()     Sets the current record's "lithology_name_order_by" value
 * @method Staging             setLithologyLevelRef()        Sets the current record's "lithology_level_ref" value
 * @method Staging             setLithologyLevelName()       Sets the current record's "lithology_level_name" value
 * @method Staging             setLithologyStatus()          Sets the current record's "lithology_status" value
 * @method Staging             setLithologyLocal()           Sets the current record's "lithology_local" value
 * @method Staging             setLithologyColor()           Sets the current record's "lithology_color" value
 * @method Staging             setLithologyPath()            Sets the current record's "lithology_path" value
 * @method Staging             setMineralRef()               Sets the current record's "mineral_ref" value
 * @method Staging             setMineralName()              Sets the current record's "mineral_name" value
 * @method Staging             setMineralNameIndexed()       Sets the current record's "mineral_name_indexed" value
 * @method Staging             setMineralNameOrderBy()       Sets the current record's "mineral_name_order_by" value
 * @method Staging             setMineralLevelRef()          Sets the current record's "mineral_level_ref" value
 * @method Staging             setMineralLevelName()         Sets the current record's "mineral_level_name" value
 * @method Staging             setMineralStatus()            Sets the current record's "mineral_status" value
 * @method Staging             setMineralLocal()             Sets the current record's "mineral_local" value
 * @method Staging             setMineralColor()             Sets the current record's "mineral_color" value
 * @method Staging             setHostTaxonRef()             Sets the current record's "host_taxon_ref" value
 * @method Staging             setHostRelationship()         Sets the current record's "host_relationship" value
 * @method Staging             setHostTaxonName()            Sets the current record's "host_taxon_name" value
 * @method Staging             setHostTaxonLevelRef()        Sets the current record's "host_taxon_level_ref" value
 * @method Staging             setHostTaxonLevelName()       Sets the current record's "host_taxon_level_name" value
 * @method Staging             setHostTaxonStatus()          Sets the current record's "host_taxon_status" value
 * @method Staging             setHostTaxonExtinct()         Sets the current record's "host_taxon_extinct" value
 * @method Staging             setHostSpecimenRef()          Sets the current record's "host_specimen_ref" value
 * @method Staging             setIgRef()                    Sets the current record's "ig_ref" value
 * @method Staging             setIgNum()                    Sets the current record's "ig_num" value
 * @method Staging             setIgDateMask()               Sets the current record's "ig_date_mask" value
 * @method Staging             setIgDate()                   Sets the current record's "ig_date" value
 * @method Staging             setAcquisitionCategory()      Sets the current record's "acquisition_category" value
 * @method Staging             setAcquisitionDateMask()      Sets the current record's "acquisition_date_mask" value
 * @method Staging             setAcquisitionDate()          Sets the current record's "acquisition_date" value
 * @method Staging             setIndividualRef()            Sets the current record's "individual_ref" value
 * @method Staging             setIndividualType()           Sets the current record's "individual_type" value
 * @method Staging             setIndividualTypeGroup()      Sets the current record's "individual_type_group" value
 * @method Staging             setIndividualTypeSearch()     Sets the current record's "individual_type_search" value
 * @method Staging             setIndividualSex()            Sets the current record's "individual_sex" value
 * @method Staging             setIndividualState()          Sets the current record's "individual_state" value
 * @method Staging             setIndividualStage()          Sets the current record's "individual_stage" value
 * @method Staging             setIndividualSocialStatus()   Sets the current record's "individual_social_status" value
 * @method Staging             setIndividualRockForm()       Sets the current record's "individual_rock_form" value
 * @method Staging             setIndividualCountMin()       Sets the current record's "individual_count_min" value
 * @method Staging             setIndividualCountMax()       Sets the current record's "individual_count_max" value
 * @method Staging             setPartRef()                  Sets the current record's "part_ref" value
 * @method Staging             setPart()                     Sets the current record's "part" value
 * @method Staging             setPartStatus()               Sets the current record's "part_status" value
 * @method Staging             setBuilding()                 Sets the current record's "building" value
 * @method Staging             setFloor()                    Sets the current record's "floor" value
 * @method Staging             setRoom()                     Sets the current record's "room" value
 * @method Staging             setRow()                      Sets the current record's "row" value
 * @method Staging             setShelf()                    Sets the current record's "shelf" value
 * @method Staging             setContainerType()            Sets the current record's "container_type" value
 * @method Staging             setContainerStorage()         Sets the current record's "container_storage" value
 * @method Staging             setContainer()                Sets the current record's "container" value
 * @method Staging             setSubContainerType()         Sets the current record's "sub_container_type" value
 * @method Staging             setSubContainerStorage()      Sets the current record's "sub_container_storage" value
 * @method Staging             setSubContainer()             Sets the current record's "sub_container" value
 * @method Staging             setPartCountMin()             Sets the current record's "part_count_min" value
 * @method Staging             setPartCountMax()             Sets the current record's "part_count_max" value
 * @method Staging             setSpecimenStatus()           Sets the current record's "specimen_status" value
 * @method Staging             setComplete()                 Sets the current record's "complete" value
 * @method Staging             setSurnumerary()              Sets the current record's "surnumerary" value
 * @method Staging             setImport()                   Sets the current record's "Import" value
 * @method Staging             setStagingTagGroups()         Sets the current record's "StagingTagGroups" collection
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStaging extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('staging');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('spec_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('import_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('category', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('expedition_ref', 'integer default:0', null, array(
             'type' => 'integer default:0',
             ));
        $this->hasColumn('expedition_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('station_visible', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('gtu_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('gtu_code', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('gtu_from_date_mask', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('gtu_from_date', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('gtu_to_date_mask', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('gtu_to_date', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('gtu_country_tag_value', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxon_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('taxon_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxon_level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('taxon_level_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxon_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxon_extinct', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('litho_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('litho_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('litho_level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('litho_level_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('litho_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('litho_local', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('litho_color', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('chrono_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('chrono_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('chrono_level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('chrono_level_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('chrono_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('chrono_local', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('chrono_color', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('lithology_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_name_order_by', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('lithology_level_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_local', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('lithology_color', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lithology_path', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('mineral_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('mineral_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('mineral_name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('mineral_name_order_by', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('mineral_level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('mineral_level_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('mineral_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('mineral_local', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('mineral_color', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('host_taxon_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('host_relationship', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('host_taxon_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('host_taxon_level_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('host_taxon_level_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('host_taxon_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('host_taxon_extinct', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('host_specimen_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ig_ref', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('ig_num', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ig_date_mask', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ig_date', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('acquisition_category', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('acquisition_date_mask', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('acquisition_date', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('individual_type', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_type_group', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_type_search', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_sex', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_state', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_stage', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_social_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_rock_form', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('individual_count_min', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('individual_count_max', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('part_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('part', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('part_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('building', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('floor', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('room', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('row', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('shelf', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container_type', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container_storage', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('container', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('sub_container_type', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('sub_container_storage', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('sub_container', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('part_count_min', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('part_count_max', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('specimen_status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('complete', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('surnumerary', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Imports as Import', array(
             'local' => 'import_ref',
             'foreign' => 'id'));

        $this->hasMany('StagingTagGroups', array(
             'local' => 'id',
             'foreign' => 'staging_ref'));
    }
}