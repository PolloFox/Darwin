<?php

/**
 * BaseTags
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $gtu_ref
 * @property integer $group_ref
 * @property string $tag_value_indexed
 * @property TagGroups $TagGroups
 * @property Gtu $Gtu
 * 
 * @method integer   getGtuRef()            Returns the current record's "gtu_ref" value
 * @method integer   getGroupRef()          Returns the current record's "group_ref" value
 * @method string    getTagValueIndexed()   Returns the current record's "tag_value_indexed" value
 * @method TagGroups getTagGroups()         Returns the current record's "TagGroups" value
 * @method Gtu       getGtu()               Returns the current record's "Gtu" value
 * @method Tags      setGtuRef()            Sets the current record's "gtu_ref" value
 * @method Tags      setGroupRef()          Sets the current record's "group_ref" value
 * @method Tags      setTagValueIndexed()   Sets the current record's "tag_value_indexed" value
 * @method Tags      setTagGroups()         Sets the current record's "TagGroups" value
 * @method Tags      setGtu()               Sets the current record's "Gtu" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTags extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tags');
        $this->hasColumn('gtu_ref', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('group_ref', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('tag_value_indexed', 'string', null, array(
             'type' => 'string',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TagGroups', array(
             'local' => 'group_ref',
             'foreign' => 'id'));

        $this->hasOne('Gtu', array(
             'local' => 'gtu_ref',
             'foreign' => 'id'));
    }
}