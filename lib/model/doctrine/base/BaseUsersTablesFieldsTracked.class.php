<?php

/**
 * BaseUsersTablesFieldsTracked
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $referenced_relation
 * @property string $field_name
 * @property integer $user_ref
 * @property Users $Users
 * 
 * @method string                   getReferencedRelation()  Returns the current record's "referenced_relation" value
 * @method string                   getFieldName()           Returns the current record's "field_name" value
 * @method integer                  getUserRef()             Returns the current record's "user_ref" value
 * @method Users                    getUsers()               Returns the current record's "Users" value
 * @method UsersTablesFieldsTracked setReferencedRelation()  Sets the current record's "referenced_relation" value
 * @method UsersTablesFieldsTracked setFieldName()           Sets the current record's "field_name" value
 * @method UsersTablesFieldsTracked setUserRef()             Sets the current record's "user_ref" value
 * @method UsersTablesFieldsTracked setUsers()               Sets the current record's "Users" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <collections@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7380 2010-03-15 21:07:50Z jwage $
 */
abstract class BaseUsersTablesFieldsTracked extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users_tables_fields_tracked');
        $this->hasColumn('referenced_relation', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('field_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('user_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'user_ref',
             'foreign' => 'id'));
    }
}